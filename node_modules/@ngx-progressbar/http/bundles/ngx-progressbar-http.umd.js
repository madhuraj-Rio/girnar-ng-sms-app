(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/http'), require('@ngx-progressbar/core')) :
	typeof define === 'function' && define.amd ? define(['exports', '@angular/core', '@angular/http', '@ngx-progressbar/core'], factory) :
	(factory((global['ngx-progressbar'] = global['ngx-progressbar'] || {}, global['ngx-progressbar'].http = {}),global.ng.core,global.ng.http,global['@ngx-progressbar/core']));
}(this, (function (exports,core,http,core$1) { 'use strict';

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
var NgProgressBrowserXhr = (function (_super) {
    __extends(NgProgressBrowserXhr, _super);
    /**
     * @param {?} progress
     */
    function NgProgressBrowserXhr(progress) {
        var _this = _super.call(this) || this;
        _this.progress = progress;
        _this.currentRequest = 0;
        return _this;
    }
    /**
     * @return {?}
     */
    NgProgressBrowserXhr.prototype.build = function () {
        var _this = this;
        var /** @type {?} */ xhr = _super.prototype.build.call(this);
        xhr.onload = function (evt) { return _this.done(); };
        xhr.onerror = function (evt) { return _this.done(); };
        xhr.onabort = function (evt) { return _this.done(); };
        xhr.onloadstart = function (event) {
            _this.currentRequest++;
            if (!_this.progress.isStarted) {
                _this.progress.start();
            }
        };
        return xhr;
    };
    /**
     * @return {?}
     */
    NgProgressBrowserXhr.prototype.done = function () {
        this.currentRequest--;
        if (this.currentRequest === 0) {
            this.progress.done();
        }
    };
    return NgProgressBrowserXhr;
}(http.BrowserXhr));
NgProgressBrowserXhr.decorators = [
    { type: core.Injectable },
];
/** @nocollapse */
NgProgressBrowserXhr.ctorParameters = function () { return [
    { type: core$1.NgProgress, },
]; };
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
var NgProgressHttpModule = (function () {
    function NgProgressHttpModule() {
    }
    return NgProgressHttpModule;
}());
NgProgressHttpModule.decorators = [
    { type: core.NgModule, args: [{
                providers: [
                    { provide: http.BrowserXhr, useClass: NgProgressBrowserXhr }
                ],
            },] },
];
/** @nocollapse */
NgProgressHttpModule.ctorParameters = function () { return []; };

exports.NgProgressHttpModule = NgProgressHttpModule;
exports.Éµa = NgProgressBrowserXhr;

Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=ngx-progressbar-http.umd.js.map
