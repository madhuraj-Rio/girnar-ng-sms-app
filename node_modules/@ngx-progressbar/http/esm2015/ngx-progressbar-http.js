import { Injectable, NgModule } from '@angular/core';
import { BrowserXhr } from '@angular/http';
import { NgProgress } from '@ngx-progressbar/core';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
class NgProgressBrowserXhr extends BrowserXhr {
    /**
     * @param {?} progress
     */
    constructor(progress) {
        super();
        this.progress = progress;
        this.currentRequest = 0;
    }
    /**
     * @return {?}
     */
    build() {
        const /** @type {?} */ xhr = super.build();
        xhr.onload = (evt) => this.done();
        xhr.onerror = (evt) => this.done();
        xhr.onabort = (evt) => this.done();
        xhr.onloadstart = (event) => {
            this.currentRequest++;
            if (!this.progress.isStarted) {
                this.progress.start();
            }
        };
        return xhr;
    }
    /**
     * @return {?}
     */
    done() {
        this.currentRequest--;
        if (this.currentRequest === 0) {
            this.progress.done();
        }
    }
}
NgProgressBrowserXhr.decorators = [
    { type: Injectable },
];
/** @nocollapse */
NgProgressBrowserXhr.ctorParameters = () => [
    { type: NgProgress, },
];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
class NgProgressHttpModule {
}
NgProgressHttpModule.decorators = [
    { type: NgModule, args: [{
                providers: [
                    { provide: BrowserXhr, useClass: NgProgressBrowserXhr }
                ],
            },] },
];
/** @nocollapse */
NgProgressHttpModule.ctorParameters = () => [];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
/**
 * Generated bundle index. Do not edit.
 */

export { NgProgressHttpModule, NgProgressBrowserXhr as Éµa };
//# sourceMappingURL=ngx-progressbar-http.js.map
